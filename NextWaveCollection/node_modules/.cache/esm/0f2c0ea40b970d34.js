let uuidv4,dbPromise;_0b9‍.x([["grantAuthToken",()=>grantAuthToken],["lookupUserFromAuthToken",()=>lookupUserFromAuthToken]]);_0b9‍.w("uuid",[["v4",["uuidv4"],function(v){uuidv4=v}]]);_0b9‍.w("./index",[["dbPromise",["dbPromise"],function(v){dbPromise=v}]]);


       const grantAuthToken = async (userId) =>
{
    const db = await _0b9‍.a("dbPromise",dbPromise);
    const tokenString = _0b9‍.a("uuidv4",uuidv4)();
    await db.run("INSERT INTO AuthTokens (token, UserID) VALUES (?, ?);",
    tokenString, userId);

    return tokenString;
};_0b9‍.j(["grantAuthToken"]);

       const lookupUserFromAuthToken = async (authToken) =>
{
    const db = await _0b9‍.a("dbPromise",dbPromise);
    const token = await db.get("SELECT * FROM AuthTokens WHERE token = ?;", authToken);
    if(!token)
    {
        return null;
    }
    const user = await db.get("SELECT UserID, Email, Username FROM tblUsers WHERE UserID = ?;", token.userId);
    
    return user;
};_0b9‍.j(["lookupUserFromAuthToken"]);